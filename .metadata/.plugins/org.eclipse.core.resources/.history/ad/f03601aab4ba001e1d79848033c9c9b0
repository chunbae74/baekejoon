import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class _2812 {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		int count = 0;
		
		String s = br.readLine();
		
		char c = s.charAt(0);
		for (int i = 1; i <= K; i++) {
			char cc = s.charAt(i);
			if (c < cc) c = cc;
		}
		
		int idx = s.indexOf(c);
		s = s.substring(idx);
		count += idx;
		
		boolean[] isNotOkay = new boolean[s.length()];
		for (int i = 0; (i < s.length() - 1) && count < K; i++) {
			char nowNum = s.charAt(i);
			char nextNum = s.charAt(i + 1);
			if (nowNum < nextNum) {
				isNotOkay[i] = true;
				count ++;
			}
			System.out.printf("nowNum = %c\tnextNum = %c\tisNotOkay = %bcount = %d\n", nowNum, nextNum, isNotOkay[i], count);
		}
		
		// 주어진 숫자가 내림차순일때
		// ex) 7 3 7654321
		if (count < K) {
			for (int i = isNotOkay.length - 1; (i >= 0) && count < K; i--) {
				if (!isNotOkay[i]) {
					isNotOkay[i] = true;
					count ++;
				}
			}
		}

		for (int i = 0; i < s.length(); i++) {
			if (!isNotOkay[i]) bw.write(s.charAt(i));
		}
		bw.flush();
		bw.close();
	}

}
